{"ast":null,"code":"var _jsxFileName = \"/Users/chazcurlee/repos/projects/RSM/client/src/pages/List.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport \"../styles/List.css\";\nimport { useState, useEffect } from \"react\";\nimport BrewCard from \"../components/BrewCard\";\n\n// data-types: brewery_type, city, country, id, name, phone, latitude, longitude, postal_code, state, street, website_url\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s();\n  const [brew, setBrew] = useState([]);\n  useEffect(() => {\n    const getBrew = async () => {\n      let newBrew = await axios.get(\"https://api.openbrewerydb.org/breweries?by_city=atlanta\");\n      setBrew(newBrew.data);\n    };\n    getBrew();\n  }, []);\n\n  // console.log(brew);\n\n  return brew.length > 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `main-bg-color list-container`,\n    children: brew.map(beer => {\n      {\n        beer.name;\n      }\n      /*#__PURE__*/_jsxDEV(BrewCard, {\n        beer: beer\n        // key={beer.id}\n        // type={beer.brewery_type}\n        // city={beer.city}\n        // country={beer.country}\n        // name={beer.name}\n        // phone={beer.phone}\n        // latitude={beer.latitude}\n        // longitude={beer.longitude}\n        // zip={beer.postal_code}\n        // state={beer.state}\n        // street={beer.street}\n        // url={beer.website_url}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"Vs/oaVp9BO5LT6x1rKOw/Aqo1VA=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["axios","useState","useEffect","BrewCard","List","brew","setBrew","getBrew","newBrew","get","data","length","map","beer","name"],"sources":["/Users/chazcurlee/repos/projects/RSM/client/src/pages/List.jsx"],"sourcesContent":["import axios from \"axios\";\nimport \"../styles/List.css\";\nimport { useState, useEffect } from \"react\";\nimport BrewCard from \"../components/BrewCard\";\n\n// data-types: brewery_type, city, country, id, name, phone, latitude, longitude, postal_code, state, street, website_url\n\nconst List = () => {\n  const [brew, setBrew] = useState([]);\n\n  useEffect(() => {\n    const getBrew = async () => {\n      let newBrew = await axios.get(\n        \"https://api.openbrewerydb.org/breweries?by_city=atlanta\"\n      );\n      setBrew(newBrew.data);\n    };\n    getBrew();\n  }, []);\n\n  // console.log(brew);\n\n  return brew.length > 1 ? (\n    <div className={`main-bg-color list-container`}>\n      {brew.map((beer) => {\n        {\n          beer.name;\n        }\n        <BrewCard\n          beer={beer}\n          // key={beer.id}\n          // type={beer.brewery_type}\n          // city={beer.city}\n          // country={beer.country}\n          // name={beer.name}\n          // phone={beer.phone}\n          // latitude={beer.latitude}\n          // longitude={beer.longitude}\n          // zip={beer.postal_code}\n          // state={beer.state}\n          // street={beer.street}\n          // url={beer.website_url}\n        />;\n      })}\n    </div>\n  ) : (\n    <div>Loading</div>\n  );\n};\n\nexport default List;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAC3B,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,wBAAwB;;AAE7C;AAAA;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMK,OAAO,GAAG,YAAY;MAC1B,IAAIC,OAAO,GAAG,MAAMR,KAAK,CAACS,GAAG,CAC3B,yDAAyD,CAC1D;MACDH,OAAO,CAACE,OAAO,CAACE,IAAI,CAAC;IACvB,CAAC;IACDH,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,OAAOF,IAAI,CAACM,MAAM,GAAG,CAAC,gBACpB;IAAK,SAAS,EAAG,8BAA8B;IAAA,UAC5CN,IAAI,CAACO,GAAG,CAAEC,IAAI,IAAK;MAClB;QACEA,IAAI,CAACC,IAAI;MACX;MACA,qBAAC,QAAQ;QACP,IAAI,EAAED;QACN;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MAAA;QAAA;QAAA;QAAA;MAAA,QACA;IACJ,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE,gBAEN;IAAA,UAAK;EAAO;IAAA;IAAA;IAAA;EAAA,QACb;AACH,CAAC;AAAC,GAzCIT,IAAI;AAAA,KAAJA,IAAI;AA2CV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}