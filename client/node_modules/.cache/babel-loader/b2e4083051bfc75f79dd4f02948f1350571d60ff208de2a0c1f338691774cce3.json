{"ast":null,"code":"import _regeneratorRuntime from\"/Users/chazcurlee/repos/projects/RSM/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/chazcurlee/repos/projects/RSM/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/chazcurlee/repos/projects/RSM/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from\"axios\";import\"../styles/List.css\";import{useState,useEffect}from\"react\";import BrewCard from\"../components/BrewCard\";// data-types: brewery_type, city, country, id, name, phone, latitude, longitude, postal_code, state, street, website_url\nimport{jsx as _jsx}from\"react/jsx-runtime\";var List=function List(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),brew=_useState2[0],setBrew=_useState2[1];useEffect(function(){var getBrew=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var newBrew;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"https://api.openbrewerydb.org/breweries?by_city=atlanta\");case 2:newBrew=_context.sent;setBrew(newBrew.data);case 4:case\"end\":return _context.stop();}},_callee);}));return function getBrew(){return _ref.apply(this,arguments);};}();getBrew();},[]);return brew.length>1?/*#__PURE__*/_jsx(\"div\",{className:\"main-bg-color list-container\",children:brew.map(function(beer){return/*#__PURE__*/_jsx(BrewCard,{beer:beer},beer.id);})}):/*#__PURE__*/_jsx(\"div\",{children:\"Loading\"});};export default List;","map":{"version":3,"names":["axios","useState","useEffect","BrewCard","List","brew","setBrew","getBrew","get","newBrew","data","length","map","beer","id"],"sources":["/Users/chazcurlee/repos/projects/RSM/client/src/pages/List.jsx"],"sourcesContent":["import axios from \"axios\";\nimport \"../styles/List.css\";\nimport { useState, useEffect } from \"react\";\nimport BrewCard from \"../components/BrewCard\";\n\n// data-types: brewery_type, city, country, id, name, phone, latitude, longitude, postal_code, state, street, website_url\n\nconst List = () => {\n  const [brew, setBrew] = useState([]);\n\n  useEffect(() => {\n    const getBrew = async () => {\n      let newBrew = await axios.get(\n        \"https://api.openbrewerydb.org/breweries?by_city=atlanta\"\n      );\n\n      setBrew(newBrew.data);\n    };\n    getBrew();\n  }, []);\n\n  return brew.length > 1 ? (\n    <div className={`main-bg-color list-container`}>\n      {brew.map((beer) => {\n        return <BrewCard key={beer.id} beer={beer} />;\n      })}\n    </div>\n  ) : (\n    <div>Loading</div>\n  );\n};\n\nexport default List;\n"],"mappings":"mZAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAO,oBAAoB,CAC3B,OAASC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAOC,SAAQ,KAAM,wBAAwB,CAE7C;AAAA,2CAEA,GAAMC,KAAI,CAAG,QAAPA,KAAI,EAAS,CACjB,cAAwBH,QAAQ,CAAC,EAAE,CAAC,wCAA7BI,IAAI,eAAEC,OAAO,eAEpBJ,SAAS,CAAC,UAAM,CACd,GAAMK,QAAO,4FAAG,sKACMP,MAAK,CAACQ,GAAG,CAC3B,yDAAyD,CAC1D,QAFGC,OAAO,eAIXH,OAAO,CAACG,OAAO,CAACC,IAAI,CAAC,CAAC,qDACvB,kBANKH,QAAO,0CAMZ,CACDA,OAAO,EAAE,CACX,CAAC,CAAE,EAAE,CAAC,CAEN,MAAOF,KAAI,CAACM,MAAM,CAAG,CAAC,cACpB,YAAK,SAAS,+BAAiC,UAC5CN,IAAI,CAACO,GAAG,CAAC,SAACC,IAAI,CAAK,CAClB,mBAAO,KAAC,QAAQ,EAAe,IAAI,CAAEA,IAAK,EAApBA,IAAI,CAACC,EAAE,CAAgB,CAC/C,CAAC,CAAC,EACE,cAEN,qBAAK,SAAO,EACb,CACH,CAAC,CAED,cAAeV,KAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}