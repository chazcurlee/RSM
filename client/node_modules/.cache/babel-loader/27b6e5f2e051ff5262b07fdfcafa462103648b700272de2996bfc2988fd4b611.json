{"ast":null,"code":"var _jsxFileName = \"/Users/chazcurlee/repos/projects/RSM/client/src/components/ReviewForm.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewForm = props => {\n  _s();\n  const [newReview, setNewReview] = useState({});\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let post = newReview;\n    // let post = await axios.post(`http://localhost:3001/review`, {\n    //   brewId: props.name,\n    //   user: newReview.user,\n    //   review: {\n    //     title: newReview.review.title,\n    //     body: newReview.review.body,\n    //     rating: newReview.review.rating,\n    //   },\n    // });\n    console.log(post);\n    props.setToggle(!props.toggle);\n  };\n  const handleChange = e => {\n    let entry = e.target.value;\n    switch (e.target.id) {\n      case \"title\":\n        setNewReview({\n          ...newReview,\n          review: {\n            title: entry\n          }\n        });\n        break;\n      case \"body\":\n        setNewReview({\n          ...newReview,\n          review: {\n            body: entry\n          }\n        });\n        break;\n      case \"user\":\n        setNewReview({\n          ...newReview,\n          user: entry\n        });\n        break;\n      case \"rating\":\n        setNewReview({\n          ...newReview,\n          review: {\n            rating: parseInt(entry)\n          }\n        });\n        break;\n      default:\n        console.log(\"Review error\");\n        break;\n    }\n    console.log(newReview);\n  };\n  console.log(props.name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Leave a Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        placeholder: \"Title\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Review\",\n        id: \"body\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"user\",\n        placeholder: \"Name\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"rating\",\n        placeholder: \"Rating\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), \"/5\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewForm, \"btbw2jRUs0mynCemoj4A4D7nAWc=\");\n_c = ReviewForm;\nexport default ReviewForm;\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["axios","useState","ReviewForm","props","newReview","setNewReview","handleSubmit","e","preventDefault","post","console","log","setToggle","toggle","handleChange","entry","target","value","id","review","title","body","user","rating","parseInt","name"],"sources":["/Users/chazcurlee/repos/projects/RSM/client/src/components/ReviewForm.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\n\nconst ReviewForm = (props) => {\n  const [newReview, setNewReview] = useState({});\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let post = newReview;\n    // let post = await axios.post(`http://localhost:3001/review`, {\n    //   brewId: props.name,\n    //   user: newReview.user,\n    //   review: {\n    //     title: newReview.review.title,\n    //     body: newReview.review.body,\n    //     rating: newReview.review.rating,\n    //   },\n    // });\n    console.log(post);\n    props.setToggle(!props.toggle);\n  };\n\n  const handleChange = (e) => {\n    let entry = e.target.value;\n\n    switch (e.target.id) {\n      case \"title\":\n        setNewReview({\n          ...newReview,\n          review: {\n            title: entry,\n          },\n        });\n        break;\n\n      case \"body\":\n        setNewReview({\n          ...newReview,\n          review: {\n            body: entry,\n          },\n        });\n        break;\n\n      case \"user\":\n        setNewReview({\n          ...newReview,\n          user: entry,\n        });\n        break;\n\n      case \"rating\":\n        setNewReview({\n          ...newReview,\n          review: {\n            rating: parseInt(entry),\n          },\n        });\n        break;\n\n      default:\n        console.log(\"Review error\");\n        break;\n    }\n    console.log(newReview);\n  };\n\n  console.log(props.name);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>Leave a Review</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          placeholder=\"Title\"\n          onChange={handleChange}\n        ></input>\n        <textarea\n          placeholder=\"Review\"\n          id=\"body\"\n          onChange={handleChange}\n        ></textarea>\n        <input\n          type=\"text\"\n          id=\"user\"\n          placeholder=\"Name\"\n          onChange={handleChange}\n        ></input>\n        <input\n          type=\"text\"\n          id=\"rating\"\n          placeholder=\"Rating\"\n          onChange={handleChange}\n        ></input>\n        /5\n        <input type=\"submit\"></input>\n      </form>\n    </div>\n  );\n};\n\nexport default ReviewForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAEjC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9C,MAAMK,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIC,IAAI,GAAGL,SAAS;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAM,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBN,KAAK,CAACS,SAAS,CAAC,CAACT,KAAK,CAACU,MAAM,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAIP,CAAC,IAAK;IAC1B,IAAIQ,KAAK,GAAGR,CAAC,CAACS,MAAM,CAACC,KAAK;IAE1B,QAAQV,CAAC,CAACS,MAAM,CAACE,EAAE;MACjB,KAAK,OAAO;QACVb,YAAY,CAAC;UACX,GAAGD,SAAS;UACZe,MAAM,EAAE;YACNC,KAAK,EAAEL;UACT;QACF,CAAC,CAAC;QACF;MAEF,KAAK,MAAM;QACTV,YAAY,CAAC;UACX,GAAGD,SAAS;UACZe,MAAM,EAAE;YACNE,IAAI,EAAEN;UACR;QACF,CAAC,CAAC;QACF;MAEF,KAAK,MAAM;QACTV,YAAY,CAAC;UACX,GAAGD,SAAS;UACZkB,IAAI,EAAEP;QACR,CAAC,CAAC;QACF;MAEF,KAAK,QAAQ;QACXV,YAAY,CAAC;UACX,GAAGD,SAAS;UACZe,MAAM,EAAE;YACNI,MAAM,EAAEC,QAAQ,CAACT,KAAK;UACxB;QACF,CAAC,CAAC;QACF;MAEF;QACEL,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3B;IAAM;IAEVD,OAAO,CAACC,GAAG,CAACP,SAAS,CAAC;EACxB,CAAC;EAEDM,OAAO,CAACC,GAAG,CAACR,KAAK,CAACsB,IAAI,CAAC;EAEvB,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAEnB,YAAa;MAAA,wBAC3B;QAAA,UAAO;MAAc;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC7B;QACE,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,OAAO;QACV,WAAW,EAAC,OAAO;QACnB,QAAQ,EAAEQ;MAAa;QAAA;QAAA;QAAA;MAAA,QAChB,eACT;QACE,WAAW,EAAC,QAAQ;QACpB,EAAE,EAAC,MAAM;QACT,QAAQ,EAAEA;MAAa;QAAA;QAAA;QAAA;MAAA,QACb,eACZ;QACE,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,WAAW,EAAC,MAAM;QAClB,QAAQ,EAAEA;MAAa;QAAA;QAAA;QAAA;MAAA,QAChB,eACT;QACE,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,QAAQ;QACX,WAAW,EAAC,QAAQ;QACpB,QAAQ,EAAEA;MAAa;QAAA;QAAA;QAAA;MAAA,QAChB,MAET;QAAO,IAAI,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACxB;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GAlGIZ,UAAU;AAAA,KAAVA,UAAU;AAoGhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}